# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Full test suite

on:
  pull_request_review:
    types: [ submitted ]

jobs:
  change-info:
    name: Check previous checks
    runs-on: ubuntu-latest
    if: >-
      github.event.review.state == 'approved'
      || github.event.review.body == 'recheck'
      || github.event.review.body == 'recheck-snap'
      || github.event.review.body == 'recheck-full'
    outputs:
      latest-workflow:  ${{ steps.latest-workflow.outputs.workflow }}
      skip-func-tests: ${{ steps.skip-func-tests.outputs.skip }}
      skip-tests: ${{ steps.skip-tests.outputs.skip }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Get latest workflow info
        id: latest-workflow
        run: |
          echo "ref_name $GITHUB_REF_NAME"
          echo "head_ref $GITHUB_HEAD_REF"

          function get_last_workflow() {
            _workflow=$(curl $GITHUB_API_URL/repos/$GITHUB_REPOSITORY/actions/workflows/tests_full.yml/runs |  jq -r '.workflow_runs[1]')
            if [[ "$(echo $_workflow | jq -r '.head_branch')" == "$GITHUB_REF_NAME" ]]; then
              echo $_workflow
            fi
          }

          workflow=$(get_last_workflow)
          while [[ ! -z "$workflow" && "$(echo $workflow | jq -r '.status')" != "completed" ]];
          do
            workflow=$(get_last_workflow)
            echo "Waiting for workflow + $(echo $workflow | jq -r '.id')"
            sleep 5
          done

          if [[ -z "$workflow" ]]; then
            echo "::set-output name=workflow::'{\"head_sha\": \"\", \"status\": \"\", \"conclusion\": \"\"}'"
          else
            echo "::set-output name=workflow::$(echo $workflow | jq -r '{head_sha ,status, conclusion}')"
          fi
      - name: Check to see if there is any new commit
        id: new-commit
        env:
          LATEST_HEAD_SHA: ${{ fromJson(steps.latest-workflow.outputs.workflow).head_sha }}
        run: |
          new_commit=0
          git log | head -n 2 | grep -qE $LATEST_HEAD_SHA || new_commit=1
          echo "::set-output name=new::$new_commit"
          if [ $new_commit == 1 ]
          then
            echo "There's a new commit."
          else
            echo "There is no new commit."
          fi
      - name: Track changed files in the PR for functional tests
        id: skip-func-tests
        run: |
          git remote add upstream $GITHUB_SERVER_URL/$GITHUB_REPOSITORY
          git fetch upstream master

          changed=0
          git diff --name-only upstream/master | grep -qE '^(juju_verify/|tests/functional/)' || changed=1
          echo "::set-output name=skip::$changed"
          if [ $changed == 0 ]
          then
            echo "The code base or function test code has changed."
          else
            echo "No changes were found."
          fi
      - name: Skip tests
        id: skip-tests
        env:
          WORKFLOW_STATUS: ${{ fromJson(steps.latest-workflow.outputs.workflow).status }}
          WORKFLOW_CONCLUSION: ${{ fromJson(steps.latest-workflow.outputs.workflow).conclusion }}
          NEW_COMMIT: ${{ steps.new-commit.outputs.new }}
        run: |
          if [[ $WORKFLOW_STATUS == 'completed' && $WORKFLOW_CONCLUSION == 'success' && $NEW_COMMIT == 0 ]]; then
            echo "Lint, Unit tests, Docs and Build will be skipped"
            echo "::set-output name=skip::1"
          else
            echo "Lint, Unit tests, Docs and Build will be run"
            echo "::set-output name=skip::0"
          fi

  lint-unittests-docs-build:
    name: Lint, Unit tests, Docs and Build
    runs-on: ubuntu-latest
    needs: change-info
    if: >-
      needs.change-info.outputs.skip-tests == 0
      || github.event.review.body == 'recheck'
      || github.event.review.body == 'recheck-snap'
      || github.event.review.body == 'recheck-full'
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.9]
    steps:
      - run: echo "run tests"

  build-snap:
    name: Build snap
    runs-on: ubuntu-latest
    needs: lint-unittests-docs-build
    steps:
    - run: echo "build snap"

  func-tests:
    name: Integration tests
    runs-on: self-hosted
    needs: build-snap
    if: >-
      needs.change-info.outputs.skip-func-tests == 0
      || github.event.review.body == 'recheck-full'
    steps:
      - run: echo "functional tests"
